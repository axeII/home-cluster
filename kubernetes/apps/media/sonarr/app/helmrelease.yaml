---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: media
spec:
  interval: 15m
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    global:
      nameOverride: *app
    image:
      repository: ghcr.io/onedr0p/sonarr-develop
      tag: 4.0.10.2624@sha256:550d8206663585710556de32e8656b4838e83c9dd79ec271af567b85fa724912
    env:
      TZ: "${TIMEZONE}"
      SONARR__INSTANCE_NAME: Sonarr
      SONARR__PORT: &port 8989
      SONARR__BRANCH: develop
      SONARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
      SONARR__LOG_LEVEL: info
    envFrom:
      - secretRef:
          name: *app
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        annotations:
          gatus.io/enabled: "true"
          hajimari.io/icon: mdi:television-classic
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Sonarr
          gethomepage.dev/icon: sonarr.png
          gethomepage.dev/description: TV Downloads
          gethomepage.dev/widget.type: sonarr
          gethomepage.dev/widget.url: http://sonarr.media.svc.cluster.local:8989
          gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_SONARR_TOKEN}}"
        hosts:
          - host: &host-release "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
          - host: &host-custom "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host-release
              - *host-custom
    podSecurityContext:
      runAsUser: ${USER_ID}
      runAsGroup: ${USER_ID}
      fsGroup: ${USER_ID}
      fsGroupChangePolicy: OnRootMismatch
    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config-v1
      nfs-nas-media:
        enabled: true
        existingClaim: media-nfs-share-pvc
        mountPath: /media
        readOnly: false
    resources:
      requests:
        cpu: 15m
        memory: 300Mi
      limits:
        memory: 2000Mi
