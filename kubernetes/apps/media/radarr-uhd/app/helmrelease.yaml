---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: radarr-uhd
  namespace: media
spec:
  interval: 15m
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      remediateLastFailure: true
  values:
    image:
      repository: ghcr.io/onedr0p/radarr-develop
      tag: 5.10.0.9090@sha256:3802c38f08a3350637d6d9ba10a35a89b791afd95c2e4e7e7402e69c0910b50c
    env:
      TZ: ${TIMEZONE}
      RADARR__INSTANCE_NAME: Radarr-uhd
      RADARR__PORT: &port 80
      RADARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
      RADARR__LOG_LEVEL: info
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/icon: "movie-roll"
          hajimari.io/group: "media"
        hosts:
          - host: &host-release "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
          - host: &host-custom "radarr-uhd.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host-release
              - *host-custom
    securityContext:
      runAsUser: 0
      runAsGroup: 0
    podSecurityContext:
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
    persistence:
      config:
        enabled: true
        existingClaim: radarr-uhd-config-v1
      nfs-nas-media:
        enabled: true
        existingClaim: media-nfs-share-pvc
        mountPath: /media
        readOnly: false
    metrics:
      enabled: true
      serviceMonitor:
        interval: 3m
        scrapeTimeout: 1m
      prometheusRule:
        enabled: true
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
