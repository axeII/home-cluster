---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 57.2.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 5m

  install:
    createNamespace: true
    remediation:
      retries: 5

  upgrade:
    remediation:
      retries: 5

  dependsOn:
    - name: longhorn
      namespace: longhorn-system

  values:
    fullnameOverride: prometheus

    alertmanager:
      config:
        global:
          resolve_timeout: 5m
          slack_api_url: ${SECRET_KPS_SLACK_API_URL}
        receivers:
          - name: "null"
          - name: "slack-notifications"
            slack_configs:
              - channel: "#prometheus-alerts"
                icon_url: https://avatars3.githubusercontent.com/u/3380462
                username: "Alertmanager"
                send_resolved: true
                title: |-
                  [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }} {{ else if ne .CommonAnnotations.message ""}}{{ .CommonAnnotations.message }} {{ else if ne .CommonAnnotations.description ""}}{{ .CommonAnnotations.description }} {{ else }}{{ .CommonLabels.alertname }}{{ end }}
                text: >-
                  {{ range .Alerts -}}
                    *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

                  {{ if ne .Annotations.summary ""}}*Summary:* {{ .Annotations.summary }} {{ else if ne .Annotations.message ""}}*Message:* {{ .Annotations.message }} {{ else if ne .Annotations.description ""}}*Description:* {{ .Annotations.description }}{{ end }}

                  *Details:*
                    {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                    {{ end }}
                  {{ end }}
          - name: 'pagerduty'
            pagerduty_configs:
              - routing_key: ${SECRET_KPS_PAGERDUTY_KEY}
                description: |-
                  {{ template "pagerduty.custom.description" . }}
        route:
          group_by:
            - "namespace"
            - "alertname"
            - "job"
          group_interval: 5m
          group_wait: 30s
          repeat_interval: 6h
          receiver: "slack-notifications"
          routes:
            - receiver: "null" # quote
              matchers:
                - alertname =~ "Watchdog"
            - receiver: "null" # quote
              matchers:
                - alertname =~ "InfoInhibitor"
            - receiver: 'pagerduty'
              matchers:
                - severity = "critical"
              continue: true
            - receiver: 'slack-notifications'
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
        hosts:
          - "alert-manager.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "alert-manager.${SECRET_DOMAIN}"
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: "longhorn"
              resources:
                requests:
                  storage: 1Gi
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints:
        - 192.168.69.110
        - 192.168.69.109
        - 192.168.69.108
      service:
        enabled: true
        port: 10257
        targetPort: 10257
      serviceMonitor:
        enabled: true
        https: true
        insecureSkipVerify: true
    kubeScheduler:
      enabled: true
      endpoints:
        - 192.168.69.110
        - 192.168.69.109
        - 192.168.69.108
      service:
        enabled: true
        port: 10259
        targetPort: 10259
      serviceMonitor:
        enabled: true
        https: true
        insecureSkipVerify: true
    kubeProxy:
      enabled: false
    kubeEtcd:
      enabled: false
    prometheusOperator:
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
          limits:
            memory: 100Mi
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
        hosts:
          - "prometheus.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "prometheus.${SECRET_DOMAIN}"
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 2048Mi
      thanosService:
        enabled: false
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "replica"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        retention: 2d
        retentionSize: "5GB"
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "longhorn"
              resources:
                requests:
                  storage: 6Gi
