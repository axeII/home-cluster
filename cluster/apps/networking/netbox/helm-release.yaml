---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: netbox
  namespace: network
  # labels:
    # component.kutara.io/part-of: standard-helm-release
spec:
  interval: 5m
  chart:
    spec:
      chart: netbox
      version: 4.1.1
      sourceRef:
        kind: HelmRepository
        name: bootc-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: quay.io/tgenannt/netbox
      pullPolicy: IfNotPresent
      tag: "v3.3.1"
    superuser:
      name: admin
      email: arroyos.scarce0l@icloud.com
    admins:
      - ["Ales Lerch", "arroyos.scarce0l@icloud.com"]
    logging:
      disable_existing_loggers: false
      handlers:
        console:
          class: logging.StreamHandler
      loggers:
        netbox.authentication.*:
          handlers:
            - console
          level: DEBUG
      version: 1
    remoteAuth:
      enabled: True
      header: HTTP_X_AUTH_REQUEST_EMAIL
      groupHeader: HTTP_X_AUTH_REQUEST_GROUPS
      defaultPermissions: None
      groupSyncEnabled: True
      groupSeparator: ','
      autoCreateUser: True
      superuserGroups:
        - admins
      staffGroups:
        - family
    # plugins:
    #   - netbox_ddns
    # - napalm-vyos
    # - napalm_ros
    loginRequired: false
    storageBackend: storages.backends.s3boto3.S3Boto3Storage
    storageConfig:
      AWS_ACCESS_KEY_ID: "${SECRET_MINIO_ACCESS_KEY}"
      AWS_SECRET_ACCESS_KEY: "${SECRET_MINIO_SECRET_KEY}"
      AWS_STORAGE_BUCKET_NAME: "netbox"
      AWS_S3_ENDPOINT_URL: "http://192.168.69.69"
    metricsEnabled: true
    # napalm:
      # username: "auto"
      # args:
        # key_file: /run/secrets/ssh-keys/id_rsa
    existingSecret: "netbox"
    postgresql:
      enabled: false
    redis:
      enabled: false
    tasksRedis:
      host: "redis.${SECRET_DOMAIN}"
    cachingRedis:
      host: "redis.${SECRET_DOMAIN}"
    externalDatabase:
      host: "database.${SECRET_DOMAIN}"
      port: 5432
      database: netbox
      username: k3s
      existingSecretName: "netbox"
      existingSecretKey: "db_password"
    persistence:
      enabled: false
    reportsPersistence:
      enabled: false
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-staging
        hajimari.io/enable: "true"
        hajimari.io/icon: ip-network-outline
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      hosts:
        - host: "netbox.${SECRET_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - "netbox.${SECRET_DOMAIN}"
          secretName: netbox-tls
    init:
      image:
        repository: docker.io/library/busybox
        tag: 1.35.0
        pullPolicy: IfNotPresent
    updateStrategy:
      type: RollingUpdate
    worker:
      enabled: true
      nodeSelector:
        kubernetes.io/arch: amd64
      updateStrategy:
        type: RollingUpdate
    # extraVolumeMounts:
    #   - name: ssh-keys
    #     mountPath: /run/secrets/ssh-keys
    #     readOnly: true
    # extraVolumes:
    #   - name: ssh-keys
    #     secret:
    #       secretName: napalm-ssh
